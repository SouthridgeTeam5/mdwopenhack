{
	"name": "CuratedAddress2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CloudSalesAddressData",
						"type": "DatasetReference"
					},
					"name": "CuratedAddress1"
				},
				{
					"dataset": {
						"referenceName": "CloudStreamingAddressData",
						"type": "DatasetReference"
					},
					"name": "CuratedAddress2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CloudSalesAddress",
						"type": "DatasetReference"
					},
					"name": "CloudSalesAddressSink1"
				},
				{
					"dataset": {
						"referenceName": "CloudStreamingAddressData2",
						"type": "DatasetReference"
					},
					"name": "CloudStreamingAddressSink2"
				}
			],
			"transformations": [
				{
					"name": "CloudSalesAddress2"
				},
				{
					"name": "CloudSalesAddress3"
				},
				{
					"name": "CloudStreamingAddress2"
				},
				{
					"name": "CloudStreamingAddress3"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				}
			],
			"script": "source(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CuratedAddress1\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CuratedAddress2\nCuratedAddress1 derive(source = \"1\") ~> CloudSalesAddress2\nCloudSalesAddress2 derive(UniqueID = source + CustomerID + AddressID) ~> CloudSalesAddress3\nCuratedAddress2 derive(source = \"1\") ~> CloudStreamingAddress2\nCloudStreamingAddress2 derive(UniqueID = source + CustomerID + AddressID) ~> CloudStreamingAddress3\nCloudSalesAddress3 select(mapColumn(\n\t\tAddressID,\n\t\tCustomerID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tsource,\n\t\tUniqueID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nCloudStreamingAddress3 select(mapColumn(\n\t\tAddressID,\n\t\tCustomerID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tsource,\n\t\tUniqueID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CloudSalesAddressSink1\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CloudStreamingAddressSink2"
		}
	}
}