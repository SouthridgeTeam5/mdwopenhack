{
	"name": "CuratedStreamingTransactions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CloudStreamingTransactions",
						"type": "DatasetReference"
					},
					"name": "CuratedStreaming1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CloudStreamingTransactions2",
						"type": "DatasetReference"
					},
					"name": "CloudStreaminSink"
				}
			],
			"transformations": [
				{
					"name": "CuratedStreaming2"
				},
				{
					"name": "CuratedStreaming3"
				}
			],
			"script": "source(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tStreamStart as string,\n\t\tStreamEnd as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CuratedStreaming1\nCuratedStreaming1 derive(source = \"1\") ~> CuratedStreaming2\nCuratedStreaming2 derive(UniqueOrderID = source + TransactionID,\n\t\tUniqueMovieID = source + MovieID,\n\t\tUniqueCustomerID = source + CustomerID,\n\t\tStreamStart_Tr = toDate(StreamStart),\n\t\tStreamEnd_Tr = toDate(StreamEnd)) ~> CuratedStreaming3\nCuratedStreaming3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CloudStreaminSink"
		}
	}
}